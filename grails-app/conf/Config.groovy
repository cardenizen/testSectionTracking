/*
 * Copyright 2009 Minnesota Department of Transportation
 * Author(s): Dennis Carroll
 *
 * This file is part of TestSectionTracking.
 * 
 * TestSectionTracking is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * TestSectionTracking is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with TestSectionTracking.  If not, see <http://www.gnu.org/licenses/>.
 */
// locations to search for config files that get merged into the main config
// config files can either be Java properties files or ConfigSlurper scripts

// grails.config.locations = [ "classpath:${appName}-config.properties",
//                             "classpath:${appName}-config.groovy",
//                             "file:${userHome}/.grails/${appName}-config.properties",
//                             "file:${userHome}/.grails/${appName}-config.groovy"]

grails.mime.file.extensions = true // enables the parsing of file extensions from URLs into the request format
grails.mime.types = [ html: ['text/html','application/xhtml+xml'],
                      xml: ['text/xml', 'application/xml'],
                      text: 'text-plain',
                      js: 'text/javascript',
                      rss: 'application/rss+xml',
                      atom: 'application/atom+xml',
                      css: 'text/css',
                      csv: 'text/csv',
// Added for the export plugin
        pdf: 'application/pdf',
        excel: 'application/vnd.ms-excel',
        ods: 'application/vnd.oasis.opendocument.spreadsheet',
                      all: '*/*',
                      json: ['application/json','text/json'],
                      form: 'application/x-www-form-urlencoded',
                      multipartForm: 'multipart/form-data'
                    ]
// The default codec used to encode data with ${}
grails.views.default.codec="none" // none, html, base64
grails.views.gsp.encoding="UTF-8"
grails.converters.encoding="UTF-8"

// enabled native2ascii conversion of i18n properties files
grails.enable.native2ascii = true

// set per-environment serverURL stem for creating absolute links
environments {
    production {
        grails.serverURL = "http://www.changeme.com"
    }
}

/**
 * Log4j configuration.
 * Causing this file to reload (e.g. edit+save) may break the appLog destination
 * and further logs will be written to files or directories like "[:]".
 * For more info see http://logging.apache.org/log4j/1.2/manual.html
 * For log levels see http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html
 * Basic log levels are ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF
 */
// Pickup the Tomcat/Catalina logDirectory else use the current dir.
def catalinaBase = System.properties.getProperty('catalina.base')
def logDirectory = catalinaBase ? "${catalinaBase}/logs" : '.'
log4j = {
    appenders {
        // Use if we want to prevent creation of a stacktrace.log file.
        'null' name:'stacktrace'

        // Use this if we want to modify the default appender called 'stdout'.
        console name:'stdout', layout:pattern(conversionPattern: '[%t] %-5p %c{2} %x - %m%n')

        // Custom log file.
        rollingFile name:"appLog",
                        file:"${logDirectory}/${appName}.log".toString(),
                        maxFileSize:'300kB',
                        maxBackupIndex:0,
                        layout:pattern(conversionPattern: '%d{[EEE, dd-MMM-yyyy @ HH:mm:ss.SSS]} [%t] %-5p %c %x - %m%n')
    }

    // Configure the root logger to output to stdout and appLog appenders.
    root {
        error 'stdout','appLog'
        additivity = true
    }

    // This is for the builtin stuff and from the default Grails-1.1.1 config.
    error 'org.codehaus.groovy.grails.web.servlet',  //  controllers
            'org.codehaus.groovy.grails.web.pages', //  GSP
            'org.codehaus.groovy.grails.web.sitemesh', //  layouts
            'org.codehaus.groovy.grails.web.mapping.filter', // URL mapping
            'org.codehaus.groovy.grails.web.mapping', // URL mapping
            'org.codehaus.groovy.grails.commons', // core / classloading
            'org.codehaus.groovy.grails.plugins', // plugins
            'org.codehaus.groovy.grails.orm.hibernate', // hibernate integration
            'org.springframework',
            'org.hibernate'

    warn   'org.mortbay.log' // Jetty

    error "grails.app" // Set the default log level for our app code.
    info "grails.app.bootstrap" // Set the log level per type and per type.class
    // Move anything that should behave differently into this section.
    switch(environment) {
        case 'development':
            debug "grails.app.service"
            debug "grails.app.controller"
            break
        case 'test':
            debug "grails.app.service"
            debug "grails.app.controller"
            break
        case 'production':
            warn "grails.app.service"
            warn "grails.app.controller"
            break
    }
}
// To use this in dev to access test data add -Dpassword=xxxxxxx as a VM option.
// e.g. -XX:PermSize=64m -XX:MaxPermSize=128m -Dpassword=xxxxxxx
grails.naming.entries = [
  'jdbc/test_mnr': [  // This binding used for run-app in the test environment
    type: "javax.sql.DataSource", //required
    auth: "Container", // optional
    description: "Data source for ...",
    url: "jdbc:oracle:thin:@MRL2K3dev.ad.dot.state.mn.us:1521:DEV11",
    username: "mnru",
    password: "${System.getProperty('password')}".toString(),
    driverClassName: "oracle.jdbc.driver.OracleDriver",
    maxActive: "8",
    maxIdle: "4",
    removeAbandoned: "true",
    removeAbandonedTimeout: "60",
    testOnBorrow: "true",
    logAbandoned: "true",
    factory: "org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory",
    validationQuery: "select count(*) from dual",
    maxWait: "-1"
  ],
  'java:comp/env/jdbc/test_mnr': [ // This binding used for test-app in the test environment
    type: "javax.sql.DataSource", //required
    auth: "Container", // optional
    description: "Data source for ...",
    url: "jdbc:oracle:thin:@MRL2K3dev.ad.dot.state.mn.us:1521:DEV11",
    username: "mnru",
    password: "${System.getProperty('password')}".toString(),
    driverClassName: "oracle.jdbc.driver.OracleDriver",
    maxActive: "8",
    maxIdle: "4",
    removeAbandoned: "true",
    removeAbandonedTimeout: "60",
    testOnBorrow: "true",
    logAbandoned: "true",
    factory: "org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory",
    validationQuery: "select count(*) from dual",
    maxWait: "-1"
  ]
]

cities = [
"Ada"
,"Adams"
,"Adrian"
,"Afton"
,"Aitkin"
,"Akeley"
,"Albany"
,"Albert Lea"
,"Alberta"
,"Albertville"
,"Alden"
,"Aldrich"
,"Alexandria"
,"Alpha"
,"Altura"
,"Alvarado"
,"Amboy"
,"Andover"
,"Annandale"
,"Anoka"
,"Apple Valley"
,"Appleton"
,"Arco"
,"Arden Hills"
,"Argyle"
,"Arlington"
,"Ashby"
,"Askov"
,"Atwater"
,"Audubon"
,"Aurora"
,"Austin"
,"Avoca"
,"Avon"
,"Babbitt"
,"Backus"
,"Badger"
,"Bagley"
,"Balaton"
,"Barnesville"
,"Barnum"
,"Barrett"
,"Barry"
,"Battle Lake"
,"Baudette"
,"Baxter"
,"Bayport"
,"Beardsley"
,"Beaver Bay"
,"Beaver Creek"
,"Becker"
,"Bejou"
,"Belgrade"
,"Belle Plaine"
,"Bellechester"
,"Bellechester"
,"Bellingham"
,"Beltrami"
,"Belview"
,"Bemidji"
,"Bena"
,"Benson"
,"Bertha"
,"Bethel"
,"Big Falls"
,"Big Lake"
,"Bigelow"
,"Bigfork"
,"Bingham Lake"
,"Birchwood Village"
,"Birchwood Village"
,"Bird Island"
,"Biscay"
,"Biwabik"
,"Blackduck"              
,"Blaine"
,"Blomkest"
,"Blooming Prairie"
,"Bloomington"
,"Blue Earth"
,"Bluffton"
,"Bock"
,"Borup"
,"Bovey"
,"Bowlus"
,"Boy River"
,"Boyd"
,"Braham"
,"Brainerd"
,"Brandon"
,"Breckenridge"
,"Breezy Point"
,"Brewster"
,"Bricelyn"
,"Brook Park"
,"Brooklyn Center"
,"Brooklyn Park"
,"Brooks"
,"Brookston"
,"Brooten"
,"Brooten"
,"Browerville"
,"Browns Valley"
,"Brownsdale"
,"Brownsville"
,"Brownton"
,"Bruno"
,"Buckman"
,"Buffalo"
,"Buffalo Lake"
,"Buhl"
,"Burnsville"
,"Burtrum"
,"Butterfield"
,"Byron"
,"Caledonia"
,"Callaway"
,"Calumet"
,"Cambridge"
,"Campbell"
,"Canby"
,"Cannon Falls"
,"Canton"
,"Carlos"
,"Carlton"
,"Carver"
,"Cass Lake"
,"Cedar Mills"
,"Center City"
,"Centerville"
,"Ceylon"
,"Champlin"
,"Chandler"
,"Chanhassen"
,"Chaska"
,"Chatfield"
,"Chickamaw Beach"
,"Chisago City"
,"Chisholm"
,"Chokio"
,"Circle Pines"
,"Clara City"
,"Claremont"
,"Clarissa"
,"Clarkfield"
,"Clarks Grove"
,"Clear Lake"
,"Clearbrook"
,"Clearwater"
,"Clements"
,"Cleveland"
,"Climax"
,"Clinton"
,"Clitherall"
,"Clontarf"
,"Cloquet"
,"Coates"
,"Cobden"
,"Cohasset"
,"Cokato"
,"Cold Spring"
,"Coleraine"
,"Cologne"
,"Columbia Heights"
,"Columbus"
,"Comfrey"
,"Comfrey"
,"Comstock"
,"Conger"
,"Cook"
,"Coon Rapids"
,"Corcoran"
,"Correll"
,"Cosmos"
,"Cottage Grove"
,"Cottonwood"
,"Courtland"
,"Cromwell"
,"Crookston"
,"Crosby"
,"Crosslake"
,"Crystal"
,"Currie"
,"Cuyuna"
,"Cyrus"
,"Dakota"
,"Dalton"
,"Danube"
,"Danvers"
,"Darfur"
,"Darwin"
,"Dassel"
,"Dawson"
,"Dayton"
,"De Graff"
,"Deephaven"
,"Deer Creek"
,"Deer River"
,"Deerwood"
,"Delano"
,"Delavan"
,"Delhi"
,"Dellwood"
,"Denham"
,"Dennison"
,"Dent"
,"Detroit Lakes"
,"Dexter"
,"Dilworth"
,"Dodge Center"
,"Donaldson"
,"Donnelly"
,"Doran"
,"Dover"
,"Dovray"
,"Duluth"
,"Dumont"
,"Dundas"
,"Dundee"
,"Dunnell"
,"Eagan"
,"Eagle Bend"
,"Eagle Lake"
,"East Bethel"
,"East Grand Forks"
,"East Gull Lake"
,"Easton"
,"Echo"
,"Eden Prairie"
,"Eden Valley"
,"Edgerton"
,"Edina"
,"Effie"
,"Eitzen"
,"Elba"
,"Elbow Lake"
,"Elgin"
,"Elizabeth"
,"Elk River"
,"Elko New Market"
,"Elkton"
,"Ellendale"
,"Ellsworth"
,"Elmdale"
,"Elmore"
,"Elrosa"
,"Ely"
,"Elysian"
,"Elysian"
,"Emily"
,"Emmons"
,"Erhard"
,"Erskine"
,"Evan"
,"Evansville"
,"Eveleth"
,"Excelsior"
,"Eyota"
,"Fairfax"
,"Fairmont"
,"Falcon Heights"
,"Faribault"
,"Farmington"
,"Farwell"
,"Federal Dam"
,"Felton"
,"Fergus Falls"
,"Fertile"
,"Fifty Lakes"
,"Finlayson"
,"Fisher"
,"Flensburg"
,"Floodwood"
,"Florence"
,"Foley"
,"Forada"
,"Forest Lake"
,"Foreston"
,"Fort Ripley"
,"Fosston"
,"Fountain"
,"Foxhome"
,"Franklin"
,"Frazee"
,"Freeborn"
,"Freeport"
,"Fridley"
,"Frost"
,"Fulda"
,"Funkley"
,"Garfield"
,"Garrison"
,"Garvin"
,"Gary"
,"Gaylord"
,"Gem Lake"
,"Geneva"
,"Genola"
,"Georgetown"
,"Ghent"
,"Gibbon"
,"Gilbert"
,"Gilman"
,"Glencoe"
,"Glenville"
,"Glenwood"
,"Glyndon"
,"Golden Valley"
,"Gonvick"
,"Good Thunder"
,"Goodhue"
,"Goodridge"
,"Goodview"
,"Graceville"
,"Granada"
,"Grand Marais"
,"Grand Meadow"
,"Grand Rapids"
,"Granite Falls"
,"Grant"
,"Grasston"
,"Green Isle"
,"Greenbush"
,"Greenfield"
,"Greenwald"
,"Greenwood"
,"Grey Eagle"
,"Grove City"
,"Grygla"
,"Gully"
,"Hackensack"
,"Hadley"
,"Hallock"
,"Halma"
,"Halstad"
,"Ham Lake"
,"Hamburg"
,"Hammond"
,"Hampton"
,"Hancock"
,"Hanley Falls"
,"Hanover"
,"Hanska"
,"Harding"
,"Hardwick"
,"Harmony"
,"Harris"
,"Hartland"
,"Hastings"
,"Hatfield"
,"Hawley"
,"Hayfield"
,"Hayward"
,"Hazel Run"
,"Hector"
,"Heidelberg"
,"Henderson"
,"Hendricks"
,"Hendrum"
,"Henning"
,"Henriette"
,"Herman"
,"Hermantown"
,"Heron Lake"
,"Hewitt"
,"Hibbing"
,"Hill City"
,"Hillman"
,"Hills"
,"Hilltop"
,"Hinckley"
,"Hitterdal"
,"Hoffman"
,"Hokah"
,"Holdingford"
,"Holland"
,"Hollandale"
,"Holloway"
,"Holt"
,"Hopkins"
,"Houston"
,"Howard Lake"
,"Hoyt Lakes"
,"Hugo"
,"Humboldt"
,"Hutchinson"
,"Ihlen"
,"Independence"
,"International Falls"
,"Inver Grove Heights"
,"Iona"
,"Iron Junction"
,"Ironton"
,"Isanti"
,"Island View"
,"Isle"
,"Ivanhoe"
,"Jackson"
,"Janesville"
,"Jasper"
,"Jasper"
,"Jeffers"
,"Jenkins"
,"Johnson"
,"Jordan"
,"Kandiyohi"
,"Karlstad"
,"Kasota"
,"Kasson"
,"Keewatin"
,"Kelliher"
,"Kellogg"
,"Kennedy"
,"Kenneth"
,"Kensington"
,"Kent"
,"Kenyon"
,"Kerkhoven"
,"Kerrick"
,"Kettle River"
,"Kiester"
,"Kilkenny"
,"Kimball"
,"Kinbrae"
,"Kingston"
,"Kinney"
,"La Crescent"
,"La Prairie"
,"La Salle"
,"Lafayette"
,"Lafayette"
,"Lake Benton"
,"Lake Bronson"
,"Lake City"
,"Lake Crystal"
,"Lake Elmo"
,"Lake Henry"
,"Lake Lillian"
,"Lake Park"
,"Lake Shore"
,"Lake St Croix Beach"
,"Lake Wilson"
,"Lakefield"
,"Lakeland"
,"Lakeland Shores"
,"Lakeville"
,"Lamberton"
,"Lancaster"
,"Landfall"
,"Lanesboro"
,"Laporte"
,"Lastrup"
,"Lauderdale"
,"Le Center"
,"Le Roy"
,"Le Sueur"
,"Lengby"
,"Leonard"
,"Leonidas"
,"Lester Prairie"
,"Lewiston"
,"Lewisville"
,"Lexington"
,"Lilydale"
,"Lindstrom"
,"Lino Lakes"
,"Lismore"
,"Litchfield"
,"Little Canada"
,"Little Falls"
,"Littlefork"
,"Long Beach"
,"Long Lake"
,"Long Prairie"
,"Longville"
,"Lonsdale"
,"Loretto"
,"Louisburg"
,"Lowry"
,"Lucan"
,"Luverne"
,"Lyle"
,"Lynd"
,"Mabel"
,"Madelia"
,"Madison"
,"Madison Lake"
,"Magnolia"
,"Mahnomen"
,"Mahtomedi"
,"Manchester"
,"Manhattan Beach"
,"Mankato"
,"Mantorville"
,"Maple Grove"
,"Maple Lake"
,"Maple Plain"
,"Mapleton"
,"Mapleview"
,"Maplewood"
,"Marble"
,"Marietta"
,"Marine On St Croix"
,"Marshall"
,"Mayer"
,"Maynard"
,"Mazeppa"
,"Mcgrath"
,"Mcgregor"
,"Mcintosh"
,"Mckinley"
,"Meadowlands"
,"Medford"
,"Medicine Lake"
,"Medina"
,"Meire Grove"
,"Melrose"
,"Menahga"
,"Mendota"
,"Mendota Heights"
,"Mentor"
,"Middle River"
,"Miesville"
,"Milaca"
,"Milan"
,"Millerville"
,"Millville"
,"Milroy"
,"Miltona"
,"Minneapolis"
,"Minneiska"
,"Minneiska"
,"Minneota"
,"Minnesota City"
,"Minnesota Lake"
,"Minnesota Lake"
,"Minnetonka"
,"Minnetonka Beach"
,"Minnetrista"
,"Mizpah"
,"Montevideo"
,"Montgomery"
,"Monticello"
,"Montrose"
,"Moorhead"
,"Moose Lake"
,"Mora"
,"Morgan"
,"Morris"
,"Morristown"
,"Morton"
,"Motley"
,"Mound"
,"Mounds View"
,"Mountain Iron"
,"Mountain Lake"
,"Murdock"
,"Myrtle"
,"Nashua"
,"Nashwauk"
,"Nassau"
,"Nelson"
,"Nerstrand"
,"Nevis"
,"New Auburn"
,"New Brighton"
,"New Germany"
,"New Hope"
,"New London"
,"New Munich"
,"New Prague"
,"New Richland"
,"New Trier"
,"New Ulm"
,"New York Mills"
,"Newfolden"
,"Newport"
,"Nicollet"
,"Nielsville"
,"Nimrod"
,"Nisswa"
,"Norcross"
,"North Branch"
,"North Mankato"
,"North Oaks"
,"North St Paul"
,"Northfield"
,"Northome"
,"Northrop"
,"Norwood Young America"
,"Nowthen"
,"Oak Grove"
,"Oak Park Heights"
,"Oakdale"
,"Odessa"
,"Odin"
,"Ogema"
,"Ogilvie"
,"Okabena"
,"Oklee"
,"Olivia"
,"Onamia"
,"Ormsby"
,"Orono"
,"Oronoco"
,"Orr"
,"Ortonville"
,"Osakis"
,"Osceola"
,"Oslo"
,"Osseo"
,"Ostrander"
,"Otsego"
,"Ottertail"
,"Owatonna"
,"Palisade"
,"Park Rapids"
,"Parkers Prairie"
,"Paynesville"
,"Pease"
,"Pelican Rapids"
,"Pemberton"
,"Pennock"
,"Pequot Lakes"
,"Perham"
,"Perley"
,"Peterson"
,"Pierz"
,"Pillager"
,"Pine City"
,"Pine Island"
,"Pine River"
,"Pine Springs"
,"Pipestone"
,"Plainview"
,"Plato"
,"Plummer"
,"Plymouth"
,"Porter"
,"Preston"
,"Princeton"
,"Prinsburg"
,"Prior Lake"
,"Proctor"
,"Quamba"
,"Racine"
,"Ramsey"
,"Randall"
,"Randolph"
,"Ranier"
,"Raymond"
,"Red Lake Falls"
,"Red Wing"
,"Redwood Falls"
,"Regal"
,"Remer"
,"Renville"
,"Revere"
,"Rice"
,"Richfield"
,"Richmond"
,"Richville"
,"Riverton"
,"Robbinsdale"
,"Rochester"
,"Rock Creek"
,"Rockford"
,"Rockville"
,"Rogers"
,"Rollingstone"
,"Roosevelt"
,"Roscoe"
,"Rose Creek"
,"Roseau"
,"Rosemount"
,"Roseville"
,"Rothsay"
,"Round Lake"
,"Royalton"
,"Rush City"
,"Rushford"
,"Rushford Village"
,"Rushmore"
,"Russell"
,"Ruthton"
,"Rutledge"
,"Sabin"
,"Sacred Heart"
,"Sanborn"
,"Sandstone"
,"Sargeant"
,"Sartell"
,"Sauk Centre"
,"Sauk Rapids"
,"Savage"
,"Scandia"
,"Scanlon"
,"Seaforth"
,"Sebeka"
,"Sedan"
,"Shafer"
,"Shakopee"
,"Shelly"
,"Sherburn"
,"Shevlin"
,"Shoreview"
,"Shorewood"
,"Shorewood"
,"Silver Bay"
,"Silver Lake"
,"Skyline"
,"Slayton"
,"Sleepy Eye"
,"Sobieski"
,"Solway"
,"South Haven"
,"South St Paul"
,"Spicer"
,"Spring Grove"
,"Spring Hill"
,"Spring Lake Park"
,"Spring Lake Park"
,"Spring Park"
,"Spring Valley"
,"Springfield"
,"Squaw Lake"
,"St Anthony"
,"St Anthony"
,"St Anthony"
,"St Augusta"
,"St Bonifacius"
,"St Charles"
,"St Clair"
,"St Cloud"
,"St Cloud"
,"St Cloud"
,"St Francis"
,"St Hilaire"
,"St James"
,"St Joseph"
,"St Leo"
,"St Louis Park"
,"St Martin"
,"St Marys Point"
,"St Michael"
,"St Paul"
,"St Paul Park"
,"St Peter"
,"St Peter"
,"St Rosa"
,"St Stephen"
,"St Vincent"
,"Stacy"
,"Staples"
,"Staples"
,"Starbuck"
,"Steen"
,"Stephen"
,"Stewart"
,"Stewartville"
,"Stillwater"
,"Stockton"
,"Storden"
,"Strandquist"
,"Strathcona"
,"Sturgeon Lake"
,"Sunburg"
,"Sunfish Lake"
,"Swanville"
,"Swanville"
,"Taconite"
,"Tamarack"
,"Taopi"
,"Taunton"
,"Taylors Falls"
,"Tenney"
,"Tenstrike"
,"Thief River Falls"
,"Thomson"
,"Tintah"
,"Tonka Bay"
,"Tower"
,"Tracy"
,"Trail"
,"Trimont"
,"Trommald"
,"Trosky"
,"Truman"
,"Turtle River"
,"Twin Lakes"
,"Twin Valley"
,"Two Harbors"
,"Tyler"
,"Ulen"
,"Underwood"
,"Upsala"
,"Urbank"
,"Utica"
,"Vadnais Heights"
,"Vergas"
,"Vermillion"
,"Verndale"
,"Vernon Center"
,"Vesta"
,"Victoria"
,"Viking"
,"Villard"
,"Vining"
,"Virginia"
,"Wabasha"
,"Wabasso"
,"Waconia"
,"Wadena"
,"Wadena"
,"Wahkon"
,"Waite Park"
,"Waldorf"
,"Walker"
,"Walnut Grove"
,"Walters"
,"Waltham"
,"Wanamingo"
,"Wanda"
,"Warba"
,"Warren"
,"Warroad"
,"Waseca"
,"Watertown"
,"Waterville"
,"Watkins"
,"Watson"
,"Waubun"
,"Waverly"
,"Wayzata"
,"Welcome"
,"Wells"
,"Wendell"
,"West Concord"
,"West St Paul"
,"West Union"
,"Westbrook"
,"Westport"
,"Whalan"
,"Wheaton"
,"White Bear Lake"
,"White Bear Lake"
,"Wilder"
,"Willernie"
,"Williams"
,"Willmar"
,"Willow River"
,"Wilmont"
,"Wilton"
,"Windom"
,"Winger"
,"Winnebago"
,"Winona"
,"Winsted"
,"Winthrop"
,"Winton"
,"Wolf Lake"
,"Wolverton"
,"Wood Lake"
,"Woodbury"
,"Woodland"
,"Woodstock"
,"Worthington"
,"Wrenshall"
,"Wright"
,"Wykoff"
,"Wyoming"
,"Zemple"
,"Zimmerman"
,"Zumbro Falls"
,"Zumbrota"
]

layers=["Aggregate Base"
,"Base"
,"Binder"
,"Bituminous"
,"Concrete"
,"Control"
,"Deery101-HeatLance"
,"Deery101-NoHeatLance"
,"Durafill 3405"
,"East Control Section"
,"Gravel"
,"MaxwellElestoflex63"
,"Not a Layer"
,"Oil Gravel"
,"Other"
,"Rejuvenator"
,"S1, 535, Roadsaver"
,"S1, Elastoflex63 - R"
,"S2, 516, Polyflex1"
,"S2, Elastoflex63 - V"
,"S3, 244, Rubber +2"
,"S3, WR Meadows 3405"
,"S4, 241, Rubber +"
,"S4, WR Meadows 164"
,"S5, 249, Polyfiber2"
,"Seal Coat"
,"Section 1"
,"Section 2"
,"Section 3"
,"Section 4"
,"Section 5"
,"Section 6 - Control"
,"Subbase"
,"Subgrade"
,"Surface Treatment"
,"Wear"
,"West Control Section"
]

keywords=["Abutment"
,"Admixtures"
,"Aggregates"
,"Asphalt"
,"Backfill"
,"Base"
,"Bituminous"
,"Bridges"
,"Bumps"
,"Centerline"
,"Chip Seal"
,"Cold-In-Place"
,"Concrete"
,"Condition"
,"Congestion"
,"Crack Seal"
,"Crosswalk"
,"Crushed"
,"Culverts"
,"D-Cracking"
,"Density"
,"Dowel Bars"
,"Drainage"
,"Earthwork"
,"Embankment"
,"Emulsion"
,"Erosion Control"
,"Expansion Joint"
,"Film Thickness"
,"Fly Ash"
,"Fog Seal"
,"Footings"
,"Foundations"
,"Frost"
,"Full Depth"
,"Full Depth Patches"
,"Gabions"
,"Geogrids"
,"Geotextiles"
,"Girders"
,"Gravel Roads"
,"Groundwater"
,"Hma"
,"Infiltration"
,"Integral Abutment Bridges"
,"Intersection"
,"Joint"
,"Joint Repair"
,"Joints"
,"Light Weight Fills"
,"Long Term Behaviour"
,"Low Volume Roads"
,"Lug Anchor"
,"Maintenance"
,"Microsurfacing"
,"Milled"
,"No Keyword"
,"Noise"
,"Oil Gravel"
,"Overlay"
,"Patches"
,"Pavement"
,"Pedestrian"
,"Performance"
,"Permeable"
,"Post Tensioned"
,"Preventive Maintenance"
,"Recycle"
,"Reflective Cracking"
,"Reinforced Earth"
,"Rejuvinator"
,"Reliners"
,"Replace"
,"Response"
,"Retrofit"
,"Rout And Seal"
,"Rubblized"
,"Rumble Strips"
,"Runoff"
,"Rural Intersections"
,"Safety"
,"Saw And Seal"
,"Sealants"
,"Shingles"
,"Shoulders"
,"Sign"
,"Slope Failure"
,"Slope Failures"
,"Slurry Seal"
,"Sma"
,"Spacing"
,"Spring Load Restrictions"
,"Stabilization"
,"Storm Water"
,"Street Lights"
,"Subdrains"
,"Subgrade"
,"Substructure"
,"Superpave"
,"Surface"
,"Tenting"
,"Thermal Movement"
,"Thermoplastic"
,"Thickness"
,"Timber"
,"Tire Pavement Interaction"
,"Traffic"
,"Type 1-Drainage"
,"Type 3-Riprap"
,"Type 5-Seperation"
,"Type 6-Reinforcement"
,"Unbonded"
,"Unsealed"
,"Visibility"
,"Walls"
,"Waste"
,"Water Quality"
,"Weather"
,"Widening"
,"Zinc Coated"
]

